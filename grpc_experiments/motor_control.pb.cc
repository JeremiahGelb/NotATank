// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: motor_control.proto

#include "motor_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CoordinatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coordinates>
      _instance;
} _Coordinates_default_instance_;
class CannonInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CannonInfo>
      _instance;
} _CannonInfo_default_instance_;
class MotorControlResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotorControlResponse>
      _instance;
} _MotorControlResponse_default_instance_;
class MotorControlRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotorControlRequest>
      _instance;
} _MotorControlRequest_default_instance_;
namespace protobuf_motor_5fcontrol_2eproto {
void InitDefaultsCoordinatesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Coordinates_default_instance_;
    new (ptr) ::Coordinates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Coordinates::InitAsDefaultInstance();
}

void InitDefaultsCoordinates() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCoordinatesImpl);
}

void InitDefaultsCannonInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_motor_5fcontrol_2eproto::InitDefaultsCoordinates();
  {
    void* ptr = &::_CannonInfo_default_instance_;
    new (ptr) ::CannonInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CannonInfo::InitAsDefaultInstance();
}

void InitDefaultsCannonInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCannonInfoImpl);
}

void InitDefaultsMotorControlResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MotorControlResponse_default_instance_;
    new (ptr) ::MotorControlResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MotorControlResponse::InitAsDefaultInstance();
}

void InitDefaultsMotorControlResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMotorControlResponseImpl);
}

void InitDefaultsMotorControlRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MotorControlRequest_default_instance_;
    new (ptr) ::MotorControlRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MotorControlRequest::InitAsDefaultInstance();
}

void InitDefaultsMotorControlRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMotorControlRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Coordinates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Coordinates, theta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Coordinates, phi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CannonInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CannonInfo, coords_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CannonInfo, loaded_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MotorControlResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MotorControlResponse, accepted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MotorControlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MotorControlRequest, is_authorized_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Coordinates)},
  { 7, -1, sizeof(::CannonInfo)},
  { 14, -1, sizeof(::MotorControlResponse)},
  { 20, -1, sizeof(::MotorControlRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Coordinates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CannonInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MotorControlResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MotorControlRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "motor_control.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023motor_control.proto\")\n\013Coordinates\022\r\n\005"
      "theta\030\001 \001(\002\022\013\n\003phi\030\002 \001(\002\":\n\nCannonInfo\022\034"
      "\n\006coords\030\001 \001(\0132\014.Coordinates\022\016\n\006loaded\030\002"
      " \001(\010\"(\n\024MotorControlResponse\022\020\n\010accepted"
      "\030\001 \001(\010\",\n\023MotorControlRequest\022\025\n\ris_auth"
      "orized\030\001 \001(\0102\200\001\n\014MotorControl\022:\n\021SetCann"
      "onPosition\022\014.Coordinates\032\025.MotorControlR"
      "esponse\"\000\0224\n\rGetCannonInfo\022\024.MotorContro"
      "lRequest\032\013.CannonInfo\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 351);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "motor_control.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_motor_5fcontrol_2eproto

// ===================================================================

void Coordinates::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coordinates::kThetaFieldNumber;
const int Coordinates::kPhiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coordinates::Coordinates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_motor_5fcontrol_2eproto::InitDefaultsCoordinates();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Coordinates)
}
Coordinates::Coordinates(const Coordinates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&theta_, &from.theta_,
    static_cast<size_t>(reinterpret_cast<char*>(&phi_) -
    reinterpret_cast<char*>(&theta_)) + sizeof(phi_));
  // @@protoc_insertion_point(copy_constructor:Coordinates)
}

void Coordinates::SharedCtor() {
  ::memset(&theta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phi_) -
      reinterpret_cast<char*>(&theta_)) + sizeof(phi_));
  _cached_size_ = 0;
}

Coordinates::~Coordinates() {
  // @@protoc_insertion_point(destructor:Coordinates)
  SharedDtor();
}

void Coordinates::SharedDtor() {
}

void Coordinates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Coordinates::descriptor() {
  ::protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Coordinates& Coordinates::default_instance() {
  ::protobuf_motor_5fcontrol_2eproto::InitDefaultsCoordinates();
  return *internal_default_instance();
}

Coordinates* Coordinates::New(::google::protobuf::Arena* arena) const {
  Coordinates* n = new Coordinates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Coordinates::Clear() {
// @@protoc_insertion_point(message_clear_start:Coordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&theta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phi_) -
      reinterpret_cast<char*>(&theta_)) + sizeof(phi_));
  _internal_metadata_.Clear();
}

bool Coordinates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Coordinates)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float theta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &theta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float phi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &phi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Coordinates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Coordinates)
  return false;
#undef DO_
}

void Coordinates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Coordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float theta = 1;
  if (this->theta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->theta(), output);
  }

  // float phi = 2;
  if (this->phi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->phi(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Coordinates)
}

::google::protobuf::uint8* Coordinates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Coordinates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float theta = 1;
  if (this->theta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->theta(), target);
  }

  // float phi = 2;
  if (this->phi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->phi(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Coordinates)
  return target;
}

size_t Coordinates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Coordinates)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float theta = 1;
  if (this->theta() != 0) {
    total_size += 1 + 4;
  }

  // float phi = 2;
  if (this->phi() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Coordinates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Coordinates)
  GOOGLE_DCHECK_NE(&from, this);
  const Coordinates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Coordinates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Coordinates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Coordinates)
    MergeFrom(*source);
  }
}

void Coordinates::MergeFrom(const Coordinates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Coordinates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.theta() != 0) {
    set_theta(from.theta());
  }
  if (from.phi() != 0) {
    set_phi(from.phi());
  }
}

void Coordinates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Coordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coordinates::CopyFrom(const Coordinates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Coordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinates::IsInitialized() const {
  return true;
}

void Coordinates::Swap(Coordinates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coordinates::InternalSwap(Coordinates* other) {
  using std::swap;
  swap(theta_, other->theta_);
  swap(phi_, other->phi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Coordinates::GetMetadata() const {
  protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CannonInfo::InitAsDefaultInstance() {
  ::_CannonInfo_default_instance_._instance.get_mutable()->coords_ = const_cast< ::Coordinates*>(
      ::Coordinates::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CannonInfo::kCoordsFieldNumber;
const int CannonInfo::kLoadedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CannonInfo::CannonInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_motor_5fcontrol_2eproto::InitDefaultsCannonInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CannonInfo)
}
CannonInfo::CannonInfo(const CannonInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_coords()) {
    coords_ = new ::Coordinates(*from.coords_);
  } else {
    coords_ = NULL;
  }
  loaded_ = from.loaded_;
  // @@protoc_insertion_point(copy_constructor:CannonInfo)
}

void CannonInfo::SharedCtor() {
  ::memset(&coords_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loaded_) -
      reinterpret_cast<char*>(&coords_)) + sizeof(loaded_));
  _cached_size_ = 0;
}

CannonInfo::~CannonInfo() {
  // @@protoc_insertion_point(destructor:CannonInfo)
  SharedDtor();
}

void CannonInfo::SharedDtor() {
  if (this != internal_default_instance()) delete coords_;
}

void CannonInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CannonInfo::descriptor() {
  ::protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CannonInfo& CannonInfo::default_instance() {
  ::protobuf_motor_5fcontrol_2eproto::InitDefaultsCannonInfo();
  return *internal_default_instance();
}

CannonInfo* CannonInfo::New(::google::protobuf::Arena* arena) const {
  CannonInfo* n = new CannonInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CannonInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CannonInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && coords_ != NULL) {
    delete coords_;
  }
  coords_ = NULL;
  loaded_ = false;
  _internal_metadata_.Clear();
}

bool CannonInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CannonInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Coordinates coords = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coords()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool loaded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &loaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CannonInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CannonInfo)
  return false;
#undef DO_
}

void CannonInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CannonInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Coordinates coords = 1;
  if (this->has_coords()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->coords_, output);
  }

  // bool loaded = 2;
  if (this->loaded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->loaded(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CannonInfo)
}

::google::protobuf::uint8* CannonInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CannonInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Coordinates coords = 1;
  if (this->has_coords()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->coords_, deterministic, target);
  }

  // bool loaded = 2;
  if (this->loaded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->loaded(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CannonInfo)
  return target;
}

size_t CannonInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CannonInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Coordinates coords = 1;
  if (this->has_coords()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coords_);
  }

  // bool loaded = 2;
  if (this->loaded() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CannonInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CannonInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CannonInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CannonInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CannonInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CannonInfo)
    MergeFrom(*source);
  }
}

void CannonInfo::MergeFrom(const CannonInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CannonInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_coords()) {
    mutable_coords()->::Coordinates::MergeFrom(from.coords());
  }
  if (from.loaded() != 0) {
    set_loaded(from.loaded());
  }
}

void CannonInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CannonInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CannonInfo::CopyFrom(const CannonInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CannonInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CannonInfo::IsInitialized() const {
  return true;
}

void CannonInfo::Swap(CannonInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CannonInfo::InternalSwap(CannonInfo* other) {
  using std::swap;
  swap(coords_, other->coords_);
  swap(loaded_, other->loaded_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CannonInfo::GetMetadata() const {
  protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MotorControlResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotorControlResponse::kAcceptedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotorControlResponse::MotorControlResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_motor_5fcontrol_2eproto::InitDefaultsMotorControlResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MotorControlResponse)
}
MotorControlResponse::MotorControlResponse(const MotorControlResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accepted_ = from.accepted_;
  // @@protoc_insertion_point(copy_constructor:MotorControlResponse)
}

void MotorControlResponse::SharedCtor() {
  accepted_ = false;
  _cached_size_ = 0;
}

MotorControlResponse::~MotorControlResponse() {
  // @@protoc_insertion_point(destructor:MotorControlResponse)
  SharedDtor();
}

void MotorControlResponse::SharedDtor() {
}

void MotorControlResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotorControlResponse::descriptor() {
  ::protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MotorControlResponse& MotorControlResponse::default_instance() {
  ::protobuf_motor_5fcontrol_2eproto::InitDefaultsMotorControlResponse();
  return *internal_default_instance();
}

MotorControlResponse* MotorControlResponse::New(::google::protobuf::Arena* arena) const {
  MotorControlResponse* n = new MotorControlResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotorControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MotorControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accepted_ = false;
  _internal_metadata_.Clear();
}

bool MotorControlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MotorControlResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool accepted = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accepted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MotorControlResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MotorControlResponse)
  return false;
#undef DO_
}

void MotorControlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MotorControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool accepted = 1;
  if (this->accepted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->accepted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MotorControlResponse)
}

::google::protobuf::uint8* MotorControlResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MotorControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool accepted = 1;
  if (this->accepted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->accepted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MotorControlResponse)
  return target;
}

size_t MotorControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MotorControlResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool accepted = 1;
  if (this->accepted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotorControlResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MotorControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MotorControlResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MotorControlResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MotorControlResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MotorControlResponse)
    MergeFrom(*source);
  }
}

void MotorControlResponse::MergeFrom(const MotorControlResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MotorControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accepted() != 0) {
    set_accepted(from.accepted());
  }
}

void MotorControlResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MotorControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotorControlResponse::CopyFrom(const MotorControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MotorControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotorControlResponse::IsInitialized() const {
  return true;
}

void MotorControlResponse::Swap(MotorControlResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotorControlResponse::InternalSwap(MotorControlResponse* other) {
  using std::swap;
  swap(accepted_, other->accepted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotorControlResponse::GetMetadata() const {
  protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MotorControlRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotorControlRequest::kIsAuthorizedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotorControlRequest::MotorControlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_motor_5fcontrol_2eproto::InitDefaultsMotorControlRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MotorControlRequest)
}
MotorControlRequest::MotorControlRequest(const MotorControlRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_authorized_ = from.is_authorized_;
  // @@protoc_insertion_point(copy_constructor:MotorControlRequest)
}

void MotorControlRequest::SharedCtor() {
  is_authorized_ = false;
  _cached_size_ = 0;
}

MotorControlRequest::~MotorControlRequest() {
  // @@protoc_insertion_point(destructor:MotorControlRequest)
  SharedDtor();
}

void MotorControlRequest::SharedDtor() {
}

void MotorControlRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotorControlRequest::descriptor() {
  ::protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MotorControlRequest& MotorControlRequest::default_instance() {
  ::protobuf_motor_5fcontrol_2eproto::InitDefaultsMotorControlRequest();
  return *internal_default_instance();
}

MotorControlRequest* MotorControlRequest::New(::google::protobuf::Arena* arena) const {
  MotorControlRequest* n = new MotorControlRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotorControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MotorControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_authorized_ = false;
  _internal_metadata_.Clear();
}

bool MotorControlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MotorControlRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_authorized = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_authorized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MotorControlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MotorControlRequest)
  return false;
#undef DO_
}

void MotorControlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MotorControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_authorized = 1;
  if (this->is_authorized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_authorized(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MotorControlRequest)
}

::google::protobuf::uint8* MotorControlRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MotorControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_authorized = 1;
  if (this->is_authorized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_authorized(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MotorControlRequest)
  return target;
}

size_t MotorControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MotorControlRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_authorized = 1;
  if (this->is_authorized() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotorControlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MotorControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MotorControlRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MotorControlRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MotorControlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MotorControlRequest)
    MergeFrom(*source);
  }
}

void MotorControlRequest::MergeFrom(const MotorControlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MotorControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_authorized() != 0) {
    set_is_authorized(from.is_authorized());
  }
}

void MotorControlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MotorControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotorControlRequest::CopyFrom(const MotorControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MotorControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotorControlRequest::IsInitialized() const {
  return true;
}

void MotorControlRequest::Swap(MotorControlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotorControlRequest::InternalSwap(MotorControlRequest* other) {
  using std::swap;
  swap(is_authorized_, other->is_authorized_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotorControlRequest::GetMetadata() const {
  protobuf_motor_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_motor_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
